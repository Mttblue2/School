/** DO NOT EDIT THIS FILE IN ANY WAY **/
#include "main.h"
#include "brain.h"

using namespace std;

int main() {
	int world[W_HEIGHT][W_WIDTH];
	int hx = START_X;
	int hy = START_Y;
	int hd = 1;
	int health = MAX_HEALTH;
	int move;
	int turns;
	int bx, by;
	int view[5][5];
	
	for(int r=0; r<W_HEIGHT; r++) {
		for(int c=0; c<W_WIDTH; c++) {
			world[r][c] = 0;
		}
	}
	srand(time(0));
	for(int i=0; i<BUSH_COUNT; i++)
	{
		int r = rand()%W_HEIGHT;
		int c = rand()%W_WIDTH;
		world[r][c] = rand()%10+1;
	}
	
	welcome();
	
	turns = 0;
	while(health>0) {
		turns++;
		if(turns >= MAX_TURNS) {
			cout << "CONGRATULATIONS! You survived " << MAX_TURNS << " and won the game!" << endl;
			cin.get();
			return 0;
		}
		show_world(world, hx, hy, hd, health);
		get_view(view, world, hx, hy, hd);
		move = make_move(view);
		if(move == 1) {
			bx = hx;
			by = hy;
			if(hd==1) by++;
			if(hd==2) bx++;
			if(hd==3) by--;
			if(hd==4) bx--;
			if(bx>=0 && by>=0 && bx < W_HEIGHT && by < W_WIDTH && world[bx][by]>0) {
				if(world[bx][by]>4) health+= world[bx][by]-4;
				if(health>MAX_HEALTH) health = MAX_HEALTH;
				world[bx][by] = -10;
			}
		}
		if(move == 2 && hd == 1 && hy < W_WIDTH-1 && world[hx][hy+1]>=0 && world[hx][hy+1]<4) hy++;
		if(move == 2 && hd == 2 && hx < W_HEIGHT-1 && world[hx+1][hy]>=0 && world[hx+1][hy]<4) hx++;
		if(move == 2 && hd == 3 && hy > 0 && world[hx][hy-1]>=0 && world[hx][hy-1]<4) hy--;
		if(move == 2 && hd == 4 && hx > 0 && world[hx-1][hy]>=0 && world[hx-1][hy]<4) hx--;
		if(move == 3) {
			hd++;
			if(hd>4) hd=1;
		}
		if(move == 4) {
			hd--;
			if(hd<1) hd=4;
		}
		grow(world);
		health--;
	}
	
	cout << "Your hedgehog is dead." << endl;
	cout << "You lasted " << turns << " turns." << endl;
	return 0;
}

void welcome() {
	cout << "== Hungry Hedgehog ==" << endl;
}

void show_world(int world[][W_WIDTH], int hx, int hy, int hd, int health) {
//	sleep(1);
//	cout << "\033[2J";
	cout << endl;
	for(int c=-1; c<=W_WIDTH; c++) cout << "#";
	cout << endl;
	for(int r=0; r<W_HEIGHT; r++) {
		cout << "#";
		for(int c=0; c<W_WIDTH; c++) {
			if(r==hx && c==hy) {
				if(hd == 1) cout << ">";
				else if(hd == 2) cout << "v";
				else if(hd == 3) cout << "<";
				else cout << "^";
			}
			else if(world[r][c] > 0 && world[r][c] < 4) cout << "-";
			else if(world[r][c] > 3 && world[r][c] < 7) cout << "+";
			else if(world[r][c] > 6) cout << "*";
			else cout << " ";
		}
		cout << "#" << endl;
	}
	for(int c=-1; c<=W_WIDTH; c++) cout << "#";
	cout << endl;
	cout << "H:";
	if(health == 0) cout << "DEAD";
	else for(int i=0; i<health; i++) cout << "=";
	cout << endl;
}

void get_view(int view[][5], int world[][W_WIDTH], int hx, int hy, int hd) {
	int tx, ty;
	if(hd == 1) {
		for(int r=0; r<5; r++) {
			for(int c=0; c<5; c++) {
				tx = hx+c-2;
				ty = hy+4-r;
				if(tx<0 || tx>=W_HEIGHT || ty<0 || ty>=W_WIDTH) view[r][c] = -1;
				else view[r][c] = world[tx][ty];
			}
		}
	}
	if(hd == 2) {
		for(int r=0; r<5; r++) {
			for(int c=0; c<5; c++) {
				tx = hx+4-r;
				ty = hy+2-c;
				if(tx<0 || tx>=W_HEIGHT || ty<0 || ty>=W_WIDTH) view[r][c] = -1;
				else view[r][c] = world[tx][ty];
			}
		}
	}
	if(hd == 3) {
		for(int r=0; r<5; r++) {
			for(int c=0; c<5; c++) {
				tx = hx-c+2;
				ty = hy-4+r;
				if(tx<0 || tx>=W_HEIGHT || ty<0 || ty>=W_WIDTH) view[r][c] = -1;
				else view[r][c] = world[tx][ty];
			}
		}
	}
	if(hd == 4) {
		for(int r=0; r<5; r++) {
			for(int c=0; c<5; c++) {
				tx = hx-4+r;
				ty = hy-2+c;
				if(tx<0 || tx>=W_HEIGHT || ty<0 || ty>=W_WIDTH) view[r][c] = -1;
				else view[r][c] = world[tx][ty];
			}
		}
	}
}

void grow(int world[][W_WIDTH]) {
	for(int r=0; r<W_HEIGHT; r++) {
		for(int c=0; c<W_WIDTH; c++) {
			if(world[r][c]>0 && world[r][c]<10) world[r][c]++;
			if(world[r][c] == -10) world[r][c]=1;
		}
	}
}
